/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TykheLuckyOracle,
  TykheLuckyOracleInterface,
} from "../TykheLuckyOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link_token_contract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumerAddress",
        type: "address",
      },
    ],
    name: "addConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "askOracle",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receivingWallet",
        type: "address",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createNewSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLinkBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSubscriptionDetails",
    outputs: [
      {
        internalType: "uint96",
        name: "balance",
        type: "uint96",
      },
      {
        internalType: "uint64",
        name: "reqCount",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "consumers",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRequestExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumerAddress",
        type: "address",
      },
    ],
    name: "removeConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_subscriptionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "setSubscriptionId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUpSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516112da3803806112da83398101604081905261002f91610104565b600180546001600160a01b03808216608052600480546601000000000000600160301b600160f01b0319909116336a01000000000000000000000263ffffffff60301b1916171765ffffffffffff19166403000186a01790556001600160a01b03199182169581169586179092556002805482169490921693841790915560039190915560008054909116909117905560078054600160401b600160e01b03191668010000000000000000909202919091179055610140565b80516001600160a01b03811681146100ff57600080fd5b919050565b60008060006060848603121561011957600080fd5b610122846100e8565b9250610130602085016100e8565b9150604084015190509250925092565b60805161117861016260003960008181610457015261049901526111786000f3fe608060405234801561001057600080fd5b50600436106100da5760003560e01c8062f714ce146100df5780630d5de6df146100f45780630e27e3df14610115578063112940f9146101285780631fe543e31461013b57806350c5f9751461014e5780636d0c4e291461016457806386850e931461016c5780638ac000211461017f57806393d81d581461019f578063a3ced7b9146101b2578063e0c86289146101ca578063e89e106a146101d2578063ea7b4f77146101db578063ed6f0792146101ee578063f2fde38b14610203578063f6eaffc814610216575b600080fd5b6100f26100ed366004610cbd565b610229565b005b6100fc6102c3565b60405161010c9493929190610ced565b60405180910390f35b6100f2610123366004610d6b565b61035d565b6100f2610136366004610d6b565b6103ef565b6100f2610149366004610df8565b61044c565b6101566104d9565b60405190815260200161010c565b6100f261054b565b6100f261017a366004610e99565b610701565b600754610192906001600160401b031681565b60405161010c9190610eb2565b6100f26101ad366004610d6b565b6107cf565b6101ba6108e1565b604051901515815260200161010c565b6100f26109a8565b61015660065481565b6100f26101e9366004610edb565b610a83565b6101f6610ac3565b60405161010c9190610ef8565b6100f2610211366004610d6b565b610b1b565b610156610224366004610e99565b610bfc565b600454600160501b90046001600160a01b0316331461024757600080fd5b60005460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af115801561029a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102be9190610f3c565b505050565b60075460405163523e3b4b60e11b8152600091829182916060916001600160a01b03600160401b8304169163a47c76969161030a916001600160401b031690600401610eb2565b600060405180830381865afa158015610327573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034f9190810190610f5e565b935093509350935090919293565b600454600160501b90046001600160a01b0316331461037b57600080fd5b600754604051639f87fad760e01b81526001600160a01b03600160401b83041691639f87fad7916103ba916001600160401b031690859060040161103f565b600060405180830381600087803b1580156103d457600080fd5b505af11580156103e8573d6000803e3d6000fd5b5050505050565b600454600160501b90046001600160a01b0316331461040d57600080fd5b600754604051631cd0704360e21b81526001600160a01b03600160401b83041691637341c10c916103ba916001600160401b031690859060040161103f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104cb5760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b6104d58282610c1d565b5050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190611061565b905090565b600454600160501b90046001600160a01b0316331461056957600080fd5b6007546001600160401b0316156105c15760405162461bcd60e51b815260206004820152601c60248201527b10481cdd589cd8dc9a5c1d1a5bdb88185b1c9958591e48195e1a5cdd60221b60448201526064016104c2565b6040805160018082528183019092526000916020808301908036833701905050905030816000815181106105f7576105f761107a565b60200260200101906001600160a01b031690816001600160a01b031681525050600760089054906101000a90046001600160a01b03166001600160a01b031663a21a23e46040518163ffffffff1660e01b81526004016020604051808303816000875af115801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190611090565b600780546001600160401b0319166001600160401b0392909216918217908190558251600160401b9091046001600160a01b031691637341c10c9184906000906106dc576106dc61107a565b60200260200101516040518363ffffffff1660e01b81526004016103ba92919061103f565b600454600160501b90046001600160a01b0316331461071f57600080fd5b6000546007546040516001600160a01b0392831692634000aea092600160401b810490911691859161075f916001600160401b0390911690602001610eb2565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161078c939291906110dd565b6020604051808303816000875af11580156107ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190610f3c565b600454600160501b90046001600160a01b031633146107ed57600080fd5b6007546001600160401b031661085d5760405162461bcd60e51b815260206004820152602f60248201527f4120737562736372697074696f6e20646f6573206e6f7420657869737420666f60448201526e1c881d1a1a5cc818dbdb9d1c9858dd608a1b60648201526084016104c2565b600754604051630d7ae1d360e41b81526001600160a01b03600160401b8304169163d7ae1d309161089c916001600160401b031690859060040161103f565b600060405180830381600087803b1580156108b657600080fd5b505af11580156108ca573d6000803e3d6000fd5b5050600780546001600160401b0319169055505050565b60075460405160009182916001600160a01b03600160401b83041691610915916001600160401b0390911690602401610eb2565b60408051601f198184030181529181526020820180516001600160e01b0316633a0ab5f560e21b1790525161094a9190611126565b600060405180830381855afa9150503d8060008114610985576040519150601f19603f3d011682016040523d82523d6000602084013e61098a565b606091505b50915050808060200190518101906109a29190610f3c565b91505090565b600454600160501b90046001600160a01b031633146109c657600080fd5b600754600354600480546040516305d3b1d360e41b8152918201929092526001600160401b0383166024820152600160201b820461ffff16604482015263ffffffff8083166064830152600160301b9092049091166084820152600160401b9091046001600160a01b031690635d3b1d309060a4016020604051808303816000875af1158015610a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7e9190611061565b600655565b600454600160501b90046001600160a01b03163314610aa157600080fd5b600780546001600160401b0319166001600160401b0392909216919091179055565b60606005805480602002602001604051908101604052809291908181526020018280548015610b1157602002820191906000526020600020905b815481526020019060010190808311610afd575b5050505050905090565b600454600160501b90046001600160a01b03163314610b3957600080fd5b6001600160a01b038116610b9e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104c2565b600480546001600160a01b03838116600160501b818102600160501b600160f01b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60058181548110610c0c57600080fd5b600091825260209091200154905081565b80516005805482825560008290526102be927f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db091820191602086018215610c80579160200282015b82811115610c80578251825591602001919060010190610c65565b50610c8c929150610c90565b5090565b5b80821115610c8c5760008155600101610c91565b6001600160a01b0381168114610cba57600080fd5b50565b60008060408385031215610cd057600080fd5b823591506020830135610ce281610ca5565b809150509250929050565b6001600160601b03851681526001600160401b0384166020808301919091526001600160a01b038481166040840152608060608401819052845190840181905260009285810192909160a0860190855b81811015610d5b578551841683529484019491840191600101610d3d565b50909a9950505050505050505050565b600060208284031215610d7d57600080fd5b8135610d8881610ca5565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610dcd57610dcd610d8f565b604052919050565b60006001600160401b03821115610dee57610dee610d8f565b5060051b60200190565b60008060408385031215610e0b57600080fd5b823591506020808401356001600160401b03811115610e2957600080fd5b8401601f81018613610e3a57600080fd5b8035610e4d610e4882610dd5565b610da5565b81815260059190911b82018301908381019088831115610e6c57600080fd5b928401925b82841015610e8a57833582529284019290840190610e71565b80955050505050509250929050565b600060208284031215610eab57600080fd5b5035919050565b6001600160401b0391909116815260200190565b6001600160401b0381168114610cba57600080fd5b600060208284031215610eed57600080fd5b8135610d8881610ec6565b6020808252825182820181905260009190848201906040850190845b81811015610f3057835183529284019291840191600101610f14565b50909695505050505050565b600060208284031215610f4e57600080fd5b81518015158114610d8857600080fd5b60008060008060808587031215610f7457600080fd5b84516001600160601b0381168114610f8b57600080fd5b80945050602080860151610f9e81610ec6565b6040870151909450610faf81610ca5565b60608701519093506001600160401b03811115610fcb57600080fd5b8601601f81018813610fdc57600080fd5b8051610fea610e4882610dd5565b81815260059190911b8201830190838101908a83111561100957600080fd5b928401925b8284101561103057835161102181610ca5565b8252928401929084019061100e565b979a9699509497505050505050565b6001600160401b039290921682526001600160a01b0316602082015260400190565b60006020828403121561107357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156110a257600080fd5b8151610d8881610ec6565b60005b838110156110c85781810151838201526020016110b0565b838111156110d7576000848401525b50505050565b60018060a01b038416815282602082015260606040820152600082518060608401526111108160808501602087016110ad565b601f01601f191691909101608001949350505050565b600082516111388184602087016110ad565b919091019291505056fea26469706673582212205e8610e256f1af821182b51a927e835b0632366b6e24c27034f68a93d83a3e7064736f6c634300080f0033";

export class TykheLuckyOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vrfCoordinator: string,
    _link_token_contract: string,
    _keyHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TykheLuckyOracle> {
    return super.deploy(
      _vrfCoordinator,
      _link_token_contract,
      _keyHash,
      overrides || {}
    ) as Promise<TykheLuckyOracle>;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _link_token_contract: string,
    _keyHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _link_token_contract,
      _keyHash,
      overrides || {}
    );
  }
  attach(address: string): TykheLuckyOracle {
    return super.attach(address) as TykheLuckyOracle;
  }
  connect(signer: Signer): TykheLuckyOracle__factory {
    return super.connect(signer) as TykheLuckyOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TykheLuckyOracleInterface {
    return new utils.Interface(_abi) as TykheLuckyOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TykheLuckyOracle {
    return new Contract(address, _abi, signerOrProvider) as TykheLuckyOracle;
  }
}

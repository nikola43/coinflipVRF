{
  "version": "3.2",
  "log": [
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:14",
        "version": {
          "withMetadata": "614c66cc8dc306ec613db0945609b2b2ccfcbdcf1c2eeda802028200f608d7ac",
          "withoutMetadata": "a404c8b7c334fb5d3a2468eb452f676458477aaad43d86755c3c659347e68c32",
          "linkedWithoutMetadata": "a404c8b7c334fb5d3a2468eb452f676458477aaad43d86755c3c659347e68c32"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes32)",
          "setSubscriptionId(uint64)",
          "requestRandomWords()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)146",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:15"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:24"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:38"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "4",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "4",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:45"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:47"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(VRFCoordinatorV2Interface)146": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "2279908a72ad41af94626693cb52dd7ce9e36c6e15b62e2d26bddeef91abee28",
          "withoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a",
          "linkedWithoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "()",
          "getLastFlips()",
          "flipCoin(bool,uint256)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/CoinFlip.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:26"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:31"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:36"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:39"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:43"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:46"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:47"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Flip)334_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:72"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:73"
            },
            {
              "label": "usedNumbersIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)334_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)334_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:14",
        "version": {
          "withMetadata": "614c66cc8dc306ec613db0945609b2b2ccfcbdcf1c2eeda802028200f608d7ac",
          "withoutMetadata": "a404c8b7c334fb5d3a2468eb452f676458477aaad43d86755c3c659347e68c32",
          "linkedWithoutMetadata": "a404c8b7c334fb5d3a2468eb452f676458477aaad43d86755c3c659347e68c32"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes32)",
          "setSubscriptionId(uint64)",
          "requestRandomWords()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:15"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:24"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:38"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "4",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "4",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:45"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:47"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "2279908a72ad41af94626693cb52dd7ce9e36c6e15b62e2d26bddeef91abee28",
          "withoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a",
          "linkedWithoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "()",
          "getLastFlips()",
          "flipCoin(bool,uint256)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/CoinFlip.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:26"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:31"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:36"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:39"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:43"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:46"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:47"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Flip)334_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:72"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:73"
            },
            {
              "label": "usedNumbersIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)334_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)334_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:14",
        "version": {
          "withMetadata": "606df125029ea27b7cc5c984d7a3afa75d04d0bf8c75d98ff07fcf37311f6b72",
          "withoutMetadata": "546c4c1ac902b920cad4d8707899ee9a45fa600aa87cd2d65880c85226db081f",
          "linkedWithoutMetadata": "546c4c1ac902b920cad4d8707899ee9a45fa600aa87cd2d65880c85226db081f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes32)",
          "setSubscriptionId(uint64)",
          "requestRandomWords()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:15"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:24"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:38"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "4",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "4",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:45"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:47"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:9",
        "version": {
          "withMetadata": "80a4aa4050a6f7e6807f2b43f45b8dc045f5fe2f5bf18d7421586d485f89a582",
          "withoutMetadata": "be8519dddac362668a6ff5e213c7864207c466d92e951eb7e50cd37a0e2dcd7d",
          "linkedWithoutMetadata": "be8519dddac362668a6ff5e213c7864207c466d92e951eb7e50cd37a0e2dcd7d"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "(address,address,bytes32)",
          "linkSubscription(uint64)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/TykheLuckyOracle.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:11"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:12"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:25"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:40"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "2279908a72ad41af94626693cb52dd7ce9e36c6e15b62e2d26bddeef91abee28",
          "withoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a",
          "linkedWithoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "()",
          "getLastFlips()",
          "flipCoin(bool,uint256)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/CoinFlip.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:26"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:31"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:36"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:39"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:43"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:46"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:47"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Flip)334_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:72"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:73"
            },
            {
              "label": "usedNumbersIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)334_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)334_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:9",
        "version": {
          "withMetadata": "80a4aa4050a6f7e6807f2b43f45b8dc045f5fe2f5bf18d7421586d485f89a582",
          "withoutMetadata": "be8519dddac362668a6ff5e213c7864207c466d92e951eb7e50cd37a0e2dcd7d",
          "linkedWithoutMetadata": "be8519dddac362668a6ff5e213c7864207c466d92e951eb7e50cd37a0e2dcd7d"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "(address,address,bytes32)",
          "linkSubscription(uint64)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/TykheLuckyOracle.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:11"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:12"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:25"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:40"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:9",
        "version": {
          "withMetadata": "59a6d50db00ad8a72f667896f4ded71fe21f917d3bc6f4016619e2d740eed82a",
          "withoutMetadata": "11bcd9ff16d47310597da2f7277a0486a49a8ab04107b58fc1d8df8b8db6b397",
          "linkedWithoutMetadata": "11bcd9ff16d47310597da2f7277a0486a49a8ab04107b58fc1d8df8b8db6b397"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "(address,address,bytes32)",
          "linkSubscription(uint64)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/TykheLuckyOracle.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:11"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:12"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:25"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:40"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "2279908a72ad41af94626693cb52dd7ce9e36c6e15b62e2d26bddeef91abee28",
          "withoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a",
          "linkedWithoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "()",
          "getLastFlips()",
          "flipCoin(bool,uint256)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/CoinFlip.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:26"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:31"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:36"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:39"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:43"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:46"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:47"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Flip)334_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:72"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:73"
            },
            {
              "label": "usedNumbersIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)334_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)334_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:9",
        "version": {
          "withMetadata": "59a6d50db00ad8a72f667896f4ded71fe21f917d3bc6f4016619e2d740eed82a",
          "withoutMetadata": "11bcd9ff16d47310597da2f7277a0486a49a8ab04107b58fc1d8df8b8db6b397",
          "linkedWithoutMetadata": "11bcd9ff16d47310597da2f7277a0486a49a8ab04107b58fc1d8df8b8db6b397"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "(address,address,bytes32)",
          "linkSubscription(uint64)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/TykheLuckyOracle.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:11"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:12"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:25"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:40"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:9",
        "version": {
          "withMetadata": "00ec888a0207b9259bea7cb108ff53f943a0cb06fa77615c68e711290037d041",
          "withoutMetadata": "656ac6a9034256c7dbe03fea80459a48add3f8e3760d8ad2cb8232a2bf243122",
          "linkedWithoutMetadata": "656ac6a9034256c7dbe03fea80459a48add3f8e3760d8ad2cb8232a2bf243122"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "(address,address,bytes32)",
          "linkSubscription(uint64)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/TykheLuckyOracle.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:11"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:12"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:25"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:40"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "2279908a72ad41af94626693cb52dd7ce9e36c6e15b62e2d26bddeef91abee28",
          "withoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a",
          "linkedWithoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "()",
          "getLastFlips()",
          "flipCoin(bool,uint256)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/CoinFlip.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:26"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:31"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:36"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:39"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:43"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:46"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:47"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Flip)334_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:72"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:73"
            },
            {
              "label": "usedNumbersIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)334_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)334_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:9",
        "version": {
          "withMetadata": "00ec888a0207b9259bea7cb108ff53f943a0cb06fa77615c68e711290037d041",
          "withoutMetadata": "656ac6a9034256c7dbe03fea80459a48add3f8e3760d8ad2cb8232a2bf243122",
          "linkedWithoutMetadata": "656ac6a9034256c7dbe03fea80459a48add3f8e3760d8ad2cb8232a2bf243122"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "(address,address,bytes32)",
          "linkSubscription(uint64)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/TykheLuckyOracle.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:11"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:12"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:25"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:40"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:9",
        "version": {
          "withMetadata": "c269eb89cf802af541391073e0635c7ae71e9c6efb564b60c1b00798ffaf7c9f",
          "withoutMetadata": "618820fe3ef2de1ffd3490c82f60ee31787b62066de67ba78780d3acb5a6116c",
          "linkedWithoutMetadata": "618820fe3ef2de1ffd3490c82f60ee31787b62066de67ba78780d3acb5a6116c"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "(address,address,bytes32)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/TykheLuckyOracle.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:11"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:12"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:25"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:40"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "2279908a72ad41af94626693cb52dd7ce9e36c6e15b62e2d26bddeef91abee28",
          "withoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a",
          "linkedWithoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "()",
          "getLastFlips()",
          "flipCoin(bool,uint256)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/CoinFlip.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:26"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:31"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:36"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:39"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:43"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:46"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:47"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Flip)334_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:72"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:73"
            },
            {
              "label": "usedNumbersIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)334_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)334_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:9",
        "version": {
          "withMetadata": "c269eb89cf802af541391073e0635c7ae71e9c6efb564b60c1b00798ffaf7c9f",
          "withoutMetadata": "618820fe3ef2de1ffd3490c82f60ee31787b62066de67ba78780d3acb5a6116c",
          "linkedWithoutMetadata": "618820fe3ef2de1ffd3490c82f60ee31787b62066de67ba78780d3acb5a6116c"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "(address,address,bytes32)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/TykheLuckyOracle.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:11"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:12"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:25"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:40"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "2279908a72ad41af94626693cb52dd7ce9e36c6e15b62e2d26bddeef91abee28",
          "withoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a",
          "linkedWithoutMetadata": "63eac9c5c14dbfe34f66f06ff933742ecdc270284ebcfb843a9215b973c4fe7a"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "()",
          "getLastFlips()",
          "flipCoin(bool,uint256)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/CoinFlip.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:22"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:26"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:31"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:36"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:39"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:43"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:46"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:47"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:48"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(Flip)334_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:72"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:73"
            },
            {
              "label": "usedNumbersIndex",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)334_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)334_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:9",
        "version": {
          "withMetadata": "e95ac8c24e79a94527581c06cd46943d8d38b2bc446e27b20f7e34d0ac09208c",
          "withoutMetadata": "67458348bc1592e92c5f7aa08f875435b66c8a632848ab9960c8b4ebc8309972",
          "linkedWithoutMetadata": "67458348bc1592e92c5f7aa08f875435b66c8a632848ab9960c8b4ebc8309972"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "requestRandomWords()",
          "(address,address,bytes32)",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWordsNumber",
            "src": "contracts/TykheLuckyOracle.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:11"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:12"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:25"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "numWordsNumber",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:40"
            },
            {
              "label": "s_subscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "s_owner",
              "offset": 8,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:353",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:208",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter01": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:73",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter02": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:167",
        "inherit": [
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:369",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeLibrary": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:274",
        "version": {
          "withMetadata": "175122e74c6a2448b508fe28b34cb5e46729cf7175a675555c5683eb7e4f28f2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeRouter": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:375",
        "version": {
          "withMetadata": "3f7fbed8aec2d38c920a1f035963ea0bc34beea699ee8a3a9e491544503fa4e4",
          "withoutMetadata": "fe9a515a7e2825d1136d3c7bd0156f08767310d3c9241635cfa7255885a73866",
          "linkedWithoutMetadata": "fe9a515a7e2825d1136d3c7bd0156f08767310d3c9241635cfa7255885a73866"
        },
        "inherit": [
          "IPancakeRouter02",
          "IPancakeRouter01"
        ],
        "libraries": [
          "SafeMath",
          "PancakeLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address,address)",
          "()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeRouter",
            "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:386"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:378"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:379"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:260",
        "version": {
          "withMetadata": "e8bb2503e05100c408121c50f1a6d6e201896f677f8c21cead2a1616e8b96ac4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:26",
        "version": {
          "withMetadata": "80102c522c8e3f23b21b3394fb25769812355038601408c5b3a0c89fe9111219",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "BEP20Token": {
        "src": "contracts/BSC Testnet Connections/BEP20Token.sol:347",
        "version": {
          "withMetadata": "ea872a728bf16c8ad89facdb2b0125b9ab7f9d77fd64342a43b9d96aba778038",
          "withoutMetadata": "d6ec17d7f9b6e119f2b1a758e4f737e830093153b5714697e0ac56791d942c67",
          "linkedWithoutMetadata": "d6ec17d7f9b6e119f2b1a758e4f737e830093153b5714697e0ac56791d942c67"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "getOwner()",
          "decimals()",
          "symbol()",
          "name()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BEP20Token",
            "src": "contracts/BSC Testnet Connections/BEP20Token.sol:359"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:289"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:350"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:352"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:354"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "4",
              "type": "t_uint8",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:355"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:356"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:357"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts/BSC Testnet Connections/BEP20Token.sol:112",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBEP20": {
        "src": "contracts/BSC Testnet Connections/BEP20Token.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/BSC Testnet Connections/BEP20Token.sol:288",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/BSC Testnet Connections/BEP20Token.sol:296"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:98",
        "version": {
          "withMetadata": "e774f782a37263f644871c47f47523deeb77ed6e37645b8b797a9ef4e0e5b3ff",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:240",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeCallee": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:256",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pancakeCall(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeERC20": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:75",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:203",
        "version": {
          "withMetadata": "4aac2cd12b6cc6306419c139454f2530ce8dc86fb2d78fdb2f2fc26b81cbcb52",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeERC20": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:112",
        "version": {
          "withMetadata": "b55e111799c297f95fe3243d55014369645ffc6023a626190250260b80ab51c8",
          "withoutMetadata": "b55e111799c297f95fe3243d55014369645ffc6023a626190250260b80ab51c8",
          "linkedWithoutMetadata": "b55e111799c297f95fe3243d55014369645ffc6023a626190250260b80ab51c8"
        },
        "inherit": [
          "IPancakeERC20"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeERC20",
            "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:130"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:118"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:119"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:120"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:122"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:125"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PancakeFactory": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:452",
        "version": {
          "withMetadata": "f9f38632e59c58c184f9595ca616176f6bdfa4c80c26b7c561caafadb5451edf",
          "withoutMetadata": "71d6aea5d77c89d61d078d24e7ab2fdc67c43de52a34bd271470fbb2f271a015",
          "linkedWithoutMetadata": "71d6aea5d77c89d61d078d24e7ab2fdc67c43de52a34bd271470fbb2f271a015"
        },
        "inherit": [
          "IPancakeFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeFactory",
            "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:463"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PancakeFactory",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:455"
            },
            {
              "label": "feeToSetter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PancakeFactory",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:456"
            },
            {
              "label": "getPair",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "PancakeFactory",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:458"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PancakeFactory",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:459"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PancakePair": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:260",
        "version": {
          "withMetadata": "3c4eae323c1d53141d05be1f266dee95396c6483aaf96a57a707f3ec087d4b6d",
          "withoutMetadata": "3c4eae323c1d53141d05be1f266dee95396c6483aaf96a57a707f3ec087d4b6d",
          "linkedWithoutMetadata": "3c4eae323c1d53141d05be1f266dee95396c6483aaf96a57a707f3ec087d4b6d"
        },
        "inherit": [
          "PancakeERC20",
          "IPancakeERC20",
          "IPancakePair"
        ],
        "libraries": [
          "SafeMath",
          "UQ112x112",
          "Math"
        ],
        "methods": [
          "getReserves()",
          "()",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakePair",
            "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:310"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:279"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:118"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:119"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:120"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:122"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:125"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:267"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:268"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:269"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:271"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:272"
            },
            {
              "label": "blockTimestampLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:273"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:275"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:276"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:277"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:279"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UQ112x112": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:226",
        "version": {
          "withMetadata": "942571b02b24ff92b7fe67a9ac37f72a0d5c160db5006f63669b0a5ba11d0583",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "WBNB": {
        "src": "contracts/BSC Testnet Connections/WBNB.sol:7",
        "version": {
          "withMetadata": "0d8b51e1510100bc81189adc2f43dfb1c0caf3d1dd3dd483b9eb03b48bbc21cf",
          "withoutMetadata": "744a68f567b443c4366f0c261dd32e3ea8a733d1a5f2f7403a36248dd397e910",
          "linkedWithoutMetadata": "744a68f567b443c4366f0c261dd32e3ea8a733d1a5f2f7403a36248dd397e910"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/BSC Testnet Connections/WBNB.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/BSC Testnet Connections/WBNB.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts/BSC Testnet Connections/WBNB.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "WBNB",
              "label": "name",
              "type": "t_string_storage",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:8"
            },
            {
              "contract": "WBNB",
              "label": "symbol",
              "type": "t_string_storage",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:9"
            },
            {
              "contract": "WBNB",
              "label": "decimals",
              "type": "t_uint8",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:10"
            },
            {
              "contract": "WBNB",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:17"
            },
            {
              "contract": "WBNB",
              "label": "allowance",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:18"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string storage pointer"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}